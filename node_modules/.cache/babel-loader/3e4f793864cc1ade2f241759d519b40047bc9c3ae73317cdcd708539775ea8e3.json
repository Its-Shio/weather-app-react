{"ast":null,"code":"var _jsxFileName = \"/Users/shio/Desktop/Folders/Work/GitHub/weather-app-react/src/WeatherForecast.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Forecast.css\";\nimport DisplayImg from \"./DisplayImg\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherForecast(props) {\n  _s();\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherForecast\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ForecastRow\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ForecastCol\",\n          children: [forecast[0].dt, /*#__PURE__*/_jsxDEV(DisplayImg, {\n            icon: forecast[0].weather[0].icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"max\",\n            children: [Math.round(forecast[0].temp.max), \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"min\",\n            children: [Math.round(forecast[0].temp.min), \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  } else {\n    const apiKey = \"25fad9f7e87157d33dde0f82ab269ee8\";\n    let lat = props.coordinates.lat;\n    let lon = props.coordinates.lon;\n    let apiUrl = \"https://api.openweathermap.org/data/2.5/onecall?lat=\".concat(lat, \"&lon=\").concat(lon, \"&appid=\").concat(apiKey, \"&units=metric\");\n    axios.get(apiUrl).then(handleResponse);\n    return null;\n  }\n}\n_s(WeatherForecast, \"20/pdcvQnLtcZUd5Lz9vhTDggVQ=\");\n_c = WeatherForecast;\nvar _c;\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"names":["React","useState","DisplayImg","axios","jsxDEV","_jsxDEV","WeatherForecast","props","_s","loaded","setLoaded","forecast","setForecast","handleResponse","response","data","daily","className","children","dt","icon","weather","fileName","_jsxFileName","lineNumber","columnNumber","Math","round","temp","max","min","apiKey","lat","coordinates","lon","apiUrl","concat","get","then","_c","$RefreshReg$"],"sources":["/Users/shio/Desktop/Folders/Work/GitHub/weather-app-react/src/WeatherForecast.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Forecast.css\";\nimport DisplayImg from \"./DisplayImg\";\nimport axios from \"axios\";\n\nexport default function WeatherForecast(props) {\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    return (\n      <div className=\"WeatherForecast\">\n        <div className=\"ForecastRow\">\n          <div className=\"ForecastCol\">\n            {forecast[0].dt}\n            <DisplayImg icon={forecast[0].weather[0].icon} />\n            <span className=\"max\">{Math.round(forecast[0].temp.max)}°</span>\n            <span className=\"min\">{Math.round(forecast[0].temp.min)}°</span>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    const apiKey = \"25fad9f7e87157d33dde0f82ab269ee8\";\n    let lat = props.coordinates.lat;\n    let lon = props.coordinates.lon;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n\n    return null;\n  }\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AACvB,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,eAAeA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC7C,IAAI,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACzC,IAAI,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5C,SAASY,cAAcA,CAACC,QAAQ,EAAE;IAChCF,WAAW,CAACE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC;IAChCN,SAAS,CAAC,IAAI,CAAC;EACjB;EAEA,IAAID,MAAM,EAAE;IACV,oBACEJ,OAAA;MAAKY,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9Bb,OAAA;QAAKY,SAAS,EAAC,aAAa;QAAAC,QAAA,eAC1Bb,OAAA;UAAKY,SAAS,EAAC,aAAa;UAAAC,QAAA,GACzBP,QAAQ,CAAC,CAAC,CAAC,CAACQ,EAAE,eACfd,OAAA,CAACH,UAAU;YAACkB,IAAI,EAAET,QAAQ,CAAC,CAAC,CAAC,CAACU,OAAO,CAAC,CAAC,CAAC,CAACD;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACjDpB,OAAA;YAAMY,SAAS,EAAC,KAAK;YAAAC,QAAA,GAAEQ,IAAI,CAACC,KAAK,CAAChB,QAAQ,CAAC,CAAC,CAAC,CAACiB,IAAI,CAACC,GAAG,CAAC,EAAC,MAAC;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAChEpB,OAAA;YAAMY,SAAS,EAAC,KAAK;YAAAC,QAAA,GAAEQ,IAAI,CAACC,KAAK,CAAChB,QAAQ,CAAC,CAAC,CAAC,CAACiB,IAAI,CAACE,GAAG,CAAC,EAAC,MAAC;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC,MAAM;IACL,MAAMM,MAAM,GAAG,kCAAkC;IACjD,IAAIC,GAAG,GAAGzB,KAAK,CAAC0B,WAAW,CAACD,GAAG;IAC/B,IAAIE,GAAG,GAAG3B,KAAK,CAAC0B,WAAW,CAACC,GAAG;IAC/B,IAAIC,MAAM,0DAAAC,MAAA,CAA0DJ,GAAG,WAAAI,MAAA,CAAQF,GAAG,aAAAE,MAAA,CAAUL,MAAM,kBAAe;IACjH5B,KAAK,CAACkC,GAAG,CAACF,MAAM,CAAC,CAACG,IAAI,CAACzB,cAAc,CAAC;IAEtC,OAAO,IAAI;EACb;AACF;AAACL,EAAA,CA/BuBF,eAAe;AAAAiC,EAAA,GAAfjC,eAAe;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}